// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoG9Asp.Models;

#nullable disable

namespace ProyectoG9Asp.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20230613005604_v4")]
    partial class v4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProyectoG9Asp.Models.Bus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("capacidad")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("buses");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Reservacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dechaReservacion")
                        .HasColumnType("timestamp");

                    b.Property<int>("disponibilidad")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<string>("observacionRechazo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("id");

                    b.ToTable("reservaciones");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Ticket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Reservacionid")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<string>("observacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("reservacion_id")
                        .HasColumnType("integer");

                    b.Property<int>("usuario_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Reservacionid");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.UsuarioRole", b =>
                {
                    b.Property<int>("usuario_id")
                        .HasColumnType("integer");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("usuario_id", "role_id");

                    b.HasIndex("role_id");

                    b.ToTable("usuario_roles");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Ticket", b =>
                {
                    b.HasOne("ProyectoG9Asp.Models.Reservacion", "Reservacion")
                        .WithMany()
                        .HasForeignKey("Reservacionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoG9Asp.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.UsuarioRole", b =>
                {
                    b.HasOne("ProyectoG9Asp.Models.Role", "Role")
                        .WithMany("usuario_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoG9Asp.Models.Usuario", "Usuario")
                        .WithMany("usuario_roles")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Role", b =>
                {
                    b.Navigation("usuario_roles");
                });

            modelBuilder.Entity("ProyectoG9Asp.Models.Usuario", b =>
                {
                    b.Navigation("usuario_roles");
                });
#pragma warning restore 612, 618
        }
    }
}
